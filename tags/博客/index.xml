<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>博客 on jiaotong</title>
    <link>https://jiaotong.me/tags/%E5%8D%9A%E5%AE%A2/</link>
    <description>Recent content in 博客 on jiaotong</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 09 Jul 2022 11:42:01 +0000</lastBuildDate>
    
	<atom:link href="https://jiaotong.me/tags/%E5%8D%9A%E5%AE%A2/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>第一个博客--献给建站历程</title>
      <link>https://jiaotong.me/post/blog/</link>
      <pubDate>Sat, 09 Jul 2022 11:42:01 +0000</pubDate>
      
      <guid>https://jiaotong.me/post/blog/</guid>
      <description>&lt;h1 id=&#34;我的建站之旅&#34;&gt;我的建站之旅&lt;/h1&gt;
&lt;h2 id=&#34;初心&#34;&gt;初心&lt;/h2&gt;
&lt;p&gt;2022年三四月份在知乎上看到了一篇帖子，计算机专业的学生到底该怎么学，该怎么学？学校所教授的知识根本不足以支撑我们日常的实践，竞赛，自学才能不断提示。帖子指出，他的大学就应该买台服务器，装Linux系统，去学学Linux的有关知识，再建个属于自己的博客。看到这里我便下定决心要去做！&lt;/p&gt;
&lt;p&gt;在第一学期我学了点Linux的基础知识，一些简单的命令，以及vim的使用。但学了不久便停下了。而到了第二学期就基本也全忘记了，我在这一年五月开始重拾Linux的基本操作，并去搜寻关于Linux服务器的购买消息。经过比较长时间的对比，我决定去购买Ucloud那家的服务器。&lt;/p&gt;
&lt;h2 id=&#34;初建站&#34;&gt;初建站&lt;/h2&gt;
&lt;p&gt;我的第一台服务器！Ucloud一台1核1G1M带宽的服务器（尽管配置不太好），我装上了centos系统，开始我去复习了Linux系统的命令行基础操作，装上了XShell，想要建立一个属于自己的网站！于是我去b站找了教程，有人推荐使用宝塔面板配合wordpress，但我觉得这不能体现属于自己的浪漫。自己的网站理应由自己一个字一个字的敲出来，看来那时候的我还是太年轻，以为学了HTML和CSS就能写出网站。&lt;/p&gt;
&lt;p&gt;我急迫的想要访问我的网站，于是乎网上随便扒了一份html文件扔了上去，我成功了！&lt;/p&gt;
&lt;p&gt;我又想在网站上标记上属于我自己的印记，于是乎随便自拍了一张上传到了网站上，又在页角写下：2020-05-20 liqi in ChangSha.&lt;/p&gt;
&lt;h2 id=&#34;机缘巧合&#34;&gt;机缘巧合&lt;/h2&gt;
&lt;p&gt;之后的一天，我收到了来自Ucloud的短信，说是我的ip存在未备案域名！！！我利用该域名访问网站，没错就是我那个什么都没有的页面！&lt;/p&gt;
&lt;p&gt;于是我向山本求助，我在巧合之下搜索到了一条信息，这个域名之前属于日本某个已经被抓获的诈骗集团的网站。而我凑巧地拿到了当时那个诈骗集团网站的IP。知道了这些之后，我觉得这还是蛮有意思的一次经历。&lt;/p&gt;
&lt;p&gt;之后的几天，学习Linux，学习建站，由看到有人用服务器做了属于自己的云笔记，于是我也安装步骤去尝试。奈何第一次没有经验，搞错了一个东西之后，准备重装系统（哈哈，反正里面也没有什么东西，而且也更方便）。但是不小心点击了删除主机！然后我的服务器就没了，就没了，钱也退还给我了？这家公司这么爽快的么？我又去看了购买界面，发现当时的低价优惠只能享受一次？&lt;/p&gt;
&lt;p&gt;到了晚上，无奈之下我去找了客服，帮我恢复主机。客服服务也是比较好，我说我误删了主机要求恢复，客服就让我留下联系方式，第二天联系我。但第二天我还是没有收到任何消息，于是晚上又去找了客服。得到的回复一样，第二天的情形依旧不变。这时我在主页看到了创建工单这个选项，填写完成后，第二天早上我就接到了电话，我的服务器回来了。&lt;/p&gt;
&lt;p&gt;又过了几天，突然想起那个域名的事情，就又去搜索了一下。不搜不知道，一搜吓一大跳。那个网站名下写着2020-05-20 liqi in ChangSha. 网站也访问不到，突然想起来当时手贱为什么要写这些东西，现在服务器ip也换了，也改不了了。我的名字难道要一直放在诈骗网站下面吗？或许只能这样了。&lt;/p&gt;
&lt;p&gt;&amp;hellip;&amp;hellip;&lt;/p&gt;
&lt;p&gt;大一结束的那个暑假，我终于有时间去建立自己的网站了。这次我使用了hexo，一个开源的blog框架。&lt;/p&gt;
&lt;h2 id=&#34;hexo&#34;&gt;hexo&lt;/h2&gt;
&lt;h3 id=&#34;安装node环境&#34;&gt;安装node环境&lt;/h3&gt;
&lt;p&gt;在安装hexo之前，我们需要nodejs和npm的支持。安装nodejs后我们需要配置node的系统环境变量：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;修改home目录下的文件.bash_profile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ vim ~/.bash_profile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;在文件的末尾添加
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Nodejs&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/usr/local/node/node-v16.13.1-linux-x64/bin:$PATH
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;退出后，刷新配置文件
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ source ~/.bash_profile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;键入node -v和npm -v后得到版本号说明成功
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;安装hexo&#34;&gt;安装hexo&lt;/h3&gt;
&lt;p&gt;我们通过npm下载hexo&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npm install -g hexo-cli
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;获得版本号
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hexo -v
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;搭建hexo博客文件并开启&#34;&gt;搭建hexo博客文件并开启&lt;/h3&gt;
&lt;p&gt;此时我们最好新建文件夹blog存放博客文件，并在该文件夹内生成博客文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mkdir ./blog
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd ./blog
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hexo init
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hexo g
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hexo s
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;实际上此时我们的博客就已经搭建好，浏览器中输入hostlocal或IP地址（默认端口号是4000）便能看到我们搭建好的网站了！并生成了第一篇文章“Hello World”。&lt;/p&gt;
&lt;h3 id=&#34;接入nginx&#34;&gt;接入nginx&lt;/h3&gt;
&lt;p&gt;为了直接输入IP地址便能直接访问博客，我又想到了我们的老朋友：nginx。&lt;/p&gt;
&lt;p&gt;nginx的默认端口是80，正好是http协议的默认端口。于是呢，我们就需要将hexo生成的网站静态资源放置到nginx的访问路径。&lt;/p&gt;
&lt;p&gt;下载nginx后，我们需要修改nginx的默认配置网站，该配置文件是/etc/nginx/目录下的nginx.conf&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;找到默认的
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;root	/usr/share/nginx/html
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;并修改为
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;root	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hexo路径&amp;#34;&lt;/span&gt;/public
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;退出后需要重启nginx
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ nginx -s reload
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此时我们重新生成hexo文件（hexo g），便可以通过nginx看到了。&lt;/p&gt;
&lt;h3 id=&#34;使用主题&#34;&gt;使用主题&lt;/h3&gt;
&lt;p&gt;自己的博客嘛，当然要符合自己的审美嘛。hexo有很多开源themes，刚开始本来想要选择一个简约一点的主题，名为next，奈何出了一些些bug便选择了这款看起来稍稍有些花哨的主题butterfly。hexo修改主题很简单，只需通过git或其他方式将theme下载下来，放到blog中的themes中，并将blog中文件_config.yml的theme: landscape(默认主题)修改为theme: butterfly(即更换主题名称)。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hexo clean
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hexo g
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;清除并重新生成便可看到修改主题后的博客。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;出现错误&#34;&gt;出现错误&lt;/h3&gt;
&lt;p&gt;此时网页中也许会报错如：hexo使用theme出现“ % extends ‘_layout.swig‘ % 、% import ‘_macro/post.swig‘ as post_template %“问题。这是因为hexo5.0之后把swig删除了，需要自己手动安装。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$  npm i hexo-renderer-swig
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>